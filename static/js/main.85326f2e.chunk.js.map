{"version":3,"sources":["components/class.js","components/ClassGraphQL.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Class","props","info","useState","classInfo","setClassInfo","useEffect","a","fetch","name","response","json","data","console","log","fetchData","id","className","title","department_name","description","error","ClassGraphQL","query","method","body","JSON","stringify","headers","course","Home","value","setValue","favoriteClasses","setClasses","onSubmit","event","preventDefault","includes","concat","type","onChange","target","map","favClass","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTA4CeA,MAxCf,SAAeC,GAEX,IAcIC,EAdJ,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KA4BA,OAxBAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,sEACSC,MAJnB,+CAI+BP,EAAMQ,MAD3B,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdC,QAAQC,IAAIF,GACZP,EAAaO,GAJC,2CAAH,qDAOfG,KACD,CAACd,EAAMQ,OAGNP,EADDE,EAAUY,GACF,yBAAKC,UAAU,eAClB,uBAAGD,GAAG,SAAN,IAAgBZ,EAAUc,MAA1B,KACA,uBAAGF,GAAG,cAAcZ,EAAUe,iBAC9B,uBAAGH,GAAG,eAAeZ,EAAUgB,cAE5BhB,EAAUiB,MACV,8CAEA,yCAKP,yBAAKJ,UAAU,SACVhB,EAAMQ,KACP,6BACKP,KCuBFoB,MAzDf,SAAsBrB,GAElB,IA+BIC,EA/BJ,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KA6CA,OAxCAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DACRgB,EADQ,oEAGOtB,EAAMQ,KAHb,sLAWSD,MAfnB,sCAe8B,CAC9BgB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACJ,UACtBK,QAAS,CACL,eAAgB,sBAfV,cAWRlB,EAXQ,gBAkBKA,EAASC,OAlBd,OAkBRC,EAlBQ,OAmBdC,QAAQC,IAAIF,GACZP,EAAaO,EAAKA,KAAKiB,QApBT,2CAAH,qDAuBfd,KACD,CAACd,EAAMQ,OAGNP,EADAE,EACO,yBAAKa,UAAU,eAClB,uBAAGD,GAAG,SAAN,IAAgBZ,EAAUc,MAA1B,KACA,uBAAGF,GAAG,cAAcZ,EAAUe,iBAC9B,uBAAGH,GAAG,eAAeZ,EAAUgB,cAEf,MAAbhB,EACA,8CAEA,yCAKP,yBAAKa,UAAU,SACVhB,EAAMQ,KACP,6BACKP,K,MCTF4B,MAzCf,SAAc7B,GAEV,MAA0BE,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KACA,EAAsC7B,mBAAS,IAA/C,mBAAO8B,EAAP,KAAwBC,EAAxB,KAgBA,OACI,6BACI,yDACA,0BAAMC,SAbO,SAACC,GAClBA,EAAMC,iBACDJ,EAAgBK,SAASP,KAC1BG,EAAWD,EAAgBM,OAAOR,IAClCC,EAAS,KAEbnB,QAAQC,IAAImB,KAQJ,qDACA,2BAAOO,KAAK,OAAOT,MAAOA,EAAOU,SAnBxB,SAACL,GAClBJ,EAASI,EAAMM,OAAOX,UAmBd,4BAAQS,KAAK,UAAb,eAEJ,yBAAKvB,UAAU,cACVgB,EAAgBU,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAOnC,KAAMmC,EAAUC,IAAKD,QAGpC,yBAAK3B,UAAU,cACVgB,EAAgBU,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAcnC,KAAMmC,EAAUC,IAAKD,UC3BxCE,MARf,WACI,OACE,yBAAK7B,UAAU,OACb,kBAAC,EAAD,QCKO8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.85326f2e.chunk.js","sourcesContent":["import \"./class.css\";\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nfunction Class(props) {\r\n\r\n    const [classInfo, setClassInfo] = useState({});\r\n\r\n    const url = \"https://api.peterportal.org/rest/v0/courses/\"\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(url + props.name);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setClassInfo(data);\r\n\r\n        }\r\n        fetchData();\r\n    }, [props.name]);\r\n    let info;\r\n    if(classInfo.id) {\r\n        info = <div className=\"information\">\r\n            <p id=\"title\"> {classInfo.title} </p>\r\n            <p id=\"department\">{classInfo.department_name}</p>\r\n            <p id=\"description\">{classInfo.description}</p>\r\n        </div>\r\n    } else if (classInfo.error) {\r\n        info = <p>Class Not Found</p>\r\n    } else {\r\n        info = <p>Loading...</p>\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"class\">\r\n            {props.name}\r\n            <div>\r\n                {info}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Class;","import \"./class.css\";\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nfunction ClassGraphQL(props) {\r\n\r\n    const [classInfo, setClassInfo] = useState({});\r\n\r\n    const url = \"https://api.peterportal.org/graphql\"\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const query = `\r\n                query {\r\n                    course(id:\"${props.name}\") {\r\n                        title\r\n                        department_name\r\n                        description\r\n                    }\r\n                }\r\n            `\r\n\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({query}),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setClassInfo(data.data.course);\r\n\r\n        }\r\n        fetchData();\r\n    }, [props.name]);\r\n    let info;\r\n    if (classInfo) {\r\n        info = <div className=\"information\">\r\n            <p id=\"title\"> {classInfo.title} </p>\r\n            <p id=\"department\">{classInfo.department_name}</p>\r\n            <p id=\"description\">{classInfo.description}</p>\r\n        </div>\r\n    } else if (classInfo == null) {\r\n        info = <p>Class Not Found</p>\r\n    } else {\r\n        info = <p>Loading...</p>\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"class\">\r\n            {props.name}\r\n            <div>\r\n                {info}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassGraphQL;","import React, {useState} from 'react';\r\nimport Class from \"./class\";\r\nimport ClassGraphQL from './ClassGraphQL';\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [favoriteClasses, setClasses] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!favoriteClasses.includes(value)) {\r\n            setClasses(favoriteClasses.concat(value));\r\n            setValue('');\r\n        }\r\n        console.log(favoriteClasses);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tanush's Favorite Classes</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Add Favorite Class</label>\r\n                <input type=\"text\" value={value} onChange={handleChange}></input>\r\n                <button type=\"submit\">Add Class!</button>\r\n            </form>\r\n            <div className=\"my-classes\">\r\n                {favoriteClasses.map((favClass) => \r\n                    <Class name={favClass} key={favClass}></Class>\r\n                )}\r\n            </div>\r\n            <div className=\"my-classes\">\r\n                {favoriteClasses.map((favClass) => \r\n                    <ClassGraphQL name={favClass} key={favClass}></ClassGraphQL>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from \"./components/Home\";\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Home></Home>\n      </div>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}